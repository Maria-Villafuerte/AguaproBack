name: Node.js CI

on:
  push:
    branches: [main, QA-(testing)]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16.x'
      
      - name: Install PostgreSQL Client
        run: sudo apt-get install -y postgresql-client

      - name: Print env variables (for debugging)
        run: echo $POSTGRES_HOST $POSTGRES_USER $POSTGRES_DATABASE
      
      - name: Test PostgreSQL SSL connection
        run: psql "sslmode=require host=$POSTGRES_HOST dbname=$POSTGRES_DATABASE user=$POSTGRES_USER password=$POSTGRES_PASSWORD"
        env:
          POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }}
          POSTGRES_DATABASE: ${{ secrets.POSTGRES_DATABASE }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}

      - name: Test database connectivity
        env:
          PGHOST: ${{ secrets.POSTGRES_HOST }}
          PGUSER: ${{ secrets.POSTGRES_USER }}
          PGPASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          PGDATABASE: ${{ secrets.POSTGRES_DATABASE }}
        run: pg_isready -h $PGHOST -p 5432 -U $PGUSER -d $PGDATABASE -t 15

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test
        env:
          POSTGRES_URL: ${{ secrets.POSTGRES_URL }}
          POSTGRES_PRISMA_URL: ${{ secrets.POSTGRES_PRISMA_URL }}
          POSTGRES_URL_NON_POOLING: ${{ secrets.POSTGRES_URL_NON_POOLING }}
          POSTGRES_URL_NO_SSL: ${{ secrets.POSTGRES_URL_NO_SSL }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DATABASE: ${{ secrets.POSTGRES_DATABASE }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
